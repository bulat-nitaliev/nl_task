# version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: my-mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data_d:/var/lib/mysql

    networks:
      - app_network

  redis:
    image: redis:7-alpine
    container_name: app_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app_network

  app:
    build: .
    container_name: app_django
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver"
  #          #  gunicorn your_project.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - app_network

  celery_worker:
    build: .
    container_name: app_celery_worker
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    
    depends_on:
      - db
      - redis
      - app
    restart: unless-stopped
    networks:
      - app_network

  # celery_beat:
  #   build: .
  #   container_name: app_celery_beat
  #   command: celery -A your_project beat --loglevel=info
  #   volumes:
  #     - .:/app
  #   environment:
  #     - DATABASE_URL=mysql://app_user:app_password@mysql:3306/app_db
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis:6379/0
  #   depends_on:
  #     - mysql
  #     - redis
  #     - app
  #   restart: unless-stopped
  #   networks:
  #     - app_network

volumes:
  db_data_d:
  redis_data:
  static_volume:

networks:
  app_network:
    driver: bridge